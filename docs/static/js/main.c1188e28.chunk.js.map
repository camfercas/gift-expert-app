{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GiftGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","name","value","onChange","target","protoTypes","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GiftGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","image","key","GiftExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"kPAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAkB5C,OACI,0BAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,OAOd,2BACAO,KAAK,OACLC,KAAK,UACLC,MAAOV,EACPW,SApBkB,SAACR,GACvBF,EAAcE,EAAES,OAAOF,YA0B/Bb,EAAYgB,WAAa,CACrBf,c,OAAegB,EAAUC,KAAKC,Y,2BCnCrBC,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAElC,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,+BAAKA,EAAL,OCHCO,EAAW,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECAZ,SAACA,GAAc,IAAD,EAEZnB,mBAAS,CAC/B0B,KAAM,GACNa,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAmBtC,OAZAC,qBAAU,WAENxB,EAAQC,GACHwB,MAAK,SAAAC,GACFH,EAAS,CACLf,KAAMkB,EACNL,SAAQ,SAItB,CAACpB,IAEIqB,EDjBuBK,CAAa1B,GAA/Ba,EAFwB,EAE7BN,KAAYa,EAFiB,EAEjBA,QAEnB,OACI,oCACI,4BAAKpB,GACJoB,GAAW,uBAAGJ,UAAU,oCAAb,cACZ,yBAAKA,UAAU,+CAEHH,EAAOJ,KAAI,SAAAkB,GAAK,OACZ,kBAAC,EAAD,eACIC,IAAKD,EAAMhB,IACPgB,UEbvBE,EAAgB,WAAO,IAAD,EAEGhD,mBAAS,CAAC,UAFb,mBAE1BiD,EAF0B,KAEdlD,EAFc,KAIjC,OACE,oCACE,6CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAGA,4BAEIkD,EAAWrB,KAAI,SAAAT,GAAQ,OACrB,kBAAC,EAAD,CACE4B,IAAO5B,EACPA,SAAYA,U,YCd1B+B,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.c1188e28.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2){\r\n            setCategories(cats => [inputValue,...cats]);\r\n            setInputValue('');\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n            type=\"text\"\r\n            name=\"agregar\"\r\n            value={inputValue}\r\n            onChange={handleInputChange} />       \r\n        </form>\r\n\r\n    )\r\n    \r\n}\r\n\r\nAddCategory.protoTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async(category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=ShSXDC3CvgeSlOekp0oYbD1HuG36iCMu`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","import React from 'react';\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p> {title} </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GiftGrid = ({category}) => {\r\n\r\n    const {data:images,loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n            {loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\r\n            <div className=\"card-grid animate__animated animate__fadeIn\">\r\n                    {\r\n                        images.map(image => (\r\n                            <GifGridItem \r\n                                key={image.id}\r\n                                {...image} \r\n                            />\r\n                        ))\r\n                    }\r\n            </div>        \r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        getGifs(category)\r\n            .then(imgs => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading:false\r\n                })\r\n            });\r\n\r\n    },[category])\r\n\r\n    return state;\r\n    \r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GiftGrid } from './components/GiftGrid';\r\n\r\nexport const GiftExpertApp = () => {\r\n\r\n  const [categories, setCategories] = useState(['Messi']);\r\n\r\n  return (\r\n    <>\r\n      <h1>GiftExpertApp</h1>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr/>\r\n\r\n\r\n      <ol>\r\n        {\r\n          categories.map(category => (\r\n            <GiftGrid \r\n              key = {category}\r\n              category = {category}/>\r\n          ))\r\n        }\r\n      </ol>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GiftExpertApp } from './GiftExpertApp';\nimport 'animate.css';\nimport './index.css';\n\nReactDOM.render( \n    <GiftExpertApp />,\n    document.getElementById('root')\n);"],"sourceRoot":""}